version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: string-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    restart: always
    networks:
      - string-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: string-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: always
    networks:
      - string-network

  mysql:
    image: mysql:string
    container_name: string-mysql
    environment:
      MYSQL_ROOT_PASSWORD: string
      MYSQL_DATABASE: string
      MYSQL_USER: string
      MYSQL_PASSWORD: string
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - string-network
    restart: always

redis:
    image: redis:latest
    container_name: string-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - string-network
    restart: always

nginx:
    image: nginx:alpine
    container_name: string-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - string-network
    restart: always



networks:
  string-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data: